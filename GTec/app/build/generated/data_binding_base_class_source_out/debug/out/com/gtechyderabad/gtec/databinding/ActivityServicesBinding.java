// Generated by view binder compiler. Do not edit!
package com.gtechyderabad.gtec.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gtechyderabad.gtec.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityServicesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bottomNavigation;

  @NonNull
  public final LinearLayout navClients;

  @NonNull
  public final LinearLayout navContact;

  @NonNull
  public final LinearLayout navHome;

  @NonNull
  public final LinearLayout navServices;

  @NonNull
  public final LinearLayout topBar;

  private ActivityServicesBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout bottomNavigation, @NonNull LinearLayout navClients,
      @NonNull LinearLayout navContact, @NonNull LinearLayout navHome,
      @NonNull LinearLayout navServices, @NonNull LinearLayout topBar) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.navClients = navClients;
    this.navContact = navContact;
    this.navHome = navHome;
    this.navServices = navServices;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityServicesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityServicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_services, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityServicesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      LinearLayout bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.nav_clients;
      LinearLayout navClients = ViewBindings.findChildViewById(rootView, id);
      if (navClients == null) {
        break missingId;
      }

      id = R.id.nav_contact;
      LinearLayout navContact = ViewBindings.findChildViewById(rootView, id);
      if (navContact == null) {
        break missingId;
      }

      id = R.id.nav_home;
      LinearLayout navHome = ViewBindings.findChildViewById(rootView, id);
      if (navHome == null) {
        break missingId;
      }

      id = R.id.nav_services;
      LinearLayout navServices = ViewBindings.findChildViewById(rootView, id);
      if (navServices == null) {
        break missingId;
      }

      id = R.id.top_bar;
      LinearLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivityServicesBinding((ConstraintLayout) rootView, bottomNavigation, navClients,
          navContact, navHome, navServices, topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
