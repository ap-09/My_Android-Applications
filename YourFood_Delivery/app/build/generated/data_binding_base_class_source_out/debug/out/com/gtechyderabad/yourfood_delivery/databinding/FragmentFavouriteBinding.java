// Generated by view binder compiler. Do not edit!
package com.gtechyderabad.yourfood_delivery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.tabs.TabLayout;
import com.gtechyderabad.yourfood_delivery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFavouriteBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView imageView1;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView txtFavt1;

  @NonNull
  public final TextView txtFavt2;

  @NonNull
  public final TextView txtFavt3;

  @NonNull
  public final ViewPager2 viewPager2;

  private FragmentFavouriteBinding(@NonNull NestedScrollView rootView,
      @NonNull ImageView imageView1, @NonNull TabLayout tabLayout, @NonNull TextView txtFavt1,
      @NonNull TextView txtFavt2, @NonNull TextView txtFavt3, @NonNull ViewPager2 viewPager2) {
    this.rootView = rootView;
    this.imageView1 = imageView1;
    this.tabLayout = tabLayout;
    this.txtFavt1 = txtFavt1;
    this.txtFavt2 = txtFavt2;
    this.txtFavt3 = txtFavt3;
    this.viewPager2 = viewPager2;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFavouriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFavouriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_favourite, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFavouriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView1;
      ImageView imageView1 = ViewBindings.findChildViewById(rootView, id);
      if (imageView1 == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.txt_favt1;
      TextView txtFavt1 = ViewBindings.findChildViewById(rootView, id);
      if (txtFavt1 == null) {
        break missingId;
      }

      id = R.id.txt_favt2;
      TextView txtFavt2 = ViewBindings.findChildViewById(rootView, id);
      if (txtFavt2 == null) {
        break missingId;
      }

      id = R.id.txt_favt3;
      TextView txtFavt3 = ViewBindings.findChildViewById(rootView, id);
      if (txtFavt3 == null) {
        break missingId;
      }

      id = R.id.view_pager2;
      ViewPager2 viewPager2 = ViewBindings.findChildViewById(rootView, id);
      if (viewPager2 == null) {
        break missingId;
      }

      return new FragmentFavouriteBinding((NestedScrollView) rootView, imageView1, tabLayout,
          txtFavt1, txtFavt2, txtFavt3, viewPager2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
